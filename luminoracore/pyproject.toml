[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "luminoracore"
dynamic = ["version"]
description = "Universal standard for AI personality management"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LuminoraCore Team", email = "team@luminoracore.dev"},
]
maintainers = [
    {name = "LuminoraCore Team", email = "team@luminoracore.dev"},
]
keywords = ["ai", "personality", "llm", "prompt", "management", "standard"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "jsonschema>=4.17.2",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    "colorama>=0.4.6",
    "pyyaml>=6.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]

[project.scripts]
luminora = "luminoracore.tools.cli:main"

[project.urls]
Homepage = "https://github.com/luminoracore/luminoracore"
Documentation = "https://docs.luminoracore.dev"
Repository = "https://github.com/luminoracore/luminoracore.git"
Issues = "https://github.com/luminoracore/luminoracore/issues"
Changelog = "https://github.com/luminoracore/luminoracore/blob/main/CHANGELOG.md"

[tool.setuptools.dynamic]
version = {attr = "luminoracore.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["luminoracore*"]

[tool.setuptools.package-data]
luminoracore = ["schema/*.json", "personalities/*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
