[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "luminoracore-cli"
version = "1.0.0"
description = "Professional CLI tool for LuminoraCore personality management"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "LuminoraCore Team", email = "cli@luminoracore.com"}
]
maintainers = [
    {name = "LuminoraCore Team", email = "cli@luminoracore.com"}
]
keywords = ["cli", "ai", "personality", "tool", "luminoracore"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Tools",
    "Topic :: Terminals",
    "Environment :: Console",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    # Use local core package during workspace development
    # "luminoracore>=1.0.0,<2.0.0",
    "click>=8.1.0,<9.0.0",
    "rich>=13.0.0,<14.0.0",
    "typer>=0.9.0,<1.0.0",
    "questionary>=1.10.0,<2.0.0",
    "httpx>=0.24.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pyyaml>=6.0,<7.0",
    "jinja2>=3.1.0,<4.0.0",
    "uvicorn>=0.22.0,<1.0.0",
    "fastapi>=0.100.0,<1.0.0",
    "websockets>=11.0.0,<12.0.0",
    "textual>=0.32.0,<1.0.0",
    "aiofiles>=23.0.0,<24.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
    "pre-commit>=3.3.0",
    "httpx-mock>=0.10.0",
]
server = [
    "uvicorn[standard]>=0.22.0,<1.0.0",
    "python-multipart>=0.0.6",
    "starlette>=0.27.0,<1.0.0",
]
build = [
    "pyinstaller>=5.10.0",
    "cx-freeze>=6.14.0",
]

[project.urls]
Homepage = "https://luminoracore.com/cli"
Documentation = "https://docs.luminoracore.com/cli"
Repository = "https://github.com/luminoracore/cli"
Issues = "https://github.com/luminoracore/cli/issues"
Changelog = "https://github.com/luminoracore/cli/blob/main/CHANGELOG.md"

[project.scripts]
luminoracore = "luminoracore_cli.main:app"
lc = "luminoracore_cli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["luminoracore_cli*"]

[tool.setuptools.package-data]
luminoracore_cli = [
    "templates/**/*",
    "server/static/*", 
    "server/templates/*",
    "completion/*",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["luminoracore_cli"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "requires_network: tests requiring network access",
]
